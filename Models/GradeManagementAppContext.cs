// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GradeManagementApp_Back.Models;

public partial class GradeManagementAppContext : DbContext
{
    public GradeManagementAppContext()
    {
    }

    public GradeManagementAppContext(DbContextOptions<GradeManagementAppContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Class> Classes { get; set; }

    public virtual DbSet<Codebook> Codebooks { get; set; }

    public virtual DbSet<Codebookitem> Codebookitems { get; set; }

    public virtual DbSet<Grade> Grades { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-SRD2J1L;Initial Catalog=GradeManagementApp;Integrated Security=True;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Class>(entity =>
        {
            entity.ToTable("Class");

            entity.Property(e => e.DatumIzmene).HasColumnType("datetime");
            entity.Property(e => e.DatumUnosa).HasColumnType("datetime");
            entity.Property(e => e.GradeId).HasColumnName("GradeID");
            entity.Property(e => e.JezikNastaveId).HasColumnName("JezikNastaveID");
            entity.Property(e => e.Naziv)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.NazivIzdvojeneSkole).HasMaxLength(50);
            entity.Property(e => e.OdeljenskiStaresina)
                .IsRequired()
                .HasMaxLength(60);
            entity.Property(e => e.PrviStraniJezikId).HasColumnName("PrviStraniJezikID");
            entity.Property(e => e.Smena)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.VrstaOdeljenjaId).HasColumnName("VrstaOdeljenjaID");

            entity.HasOne(d => d.Grade).WithMany(p => p.Classes)
                .HasForeignKey(d => d.GradeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Class_Grade");

            entity.HasOne(d => d.JezikNastave).WithMany(p => p.ClassJezikNastaves)
                .HasForeignKey(d => d.JezikNastaveId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Class_Coodebookitem1");

            entity.HasOne(d => d.PrviStraniJezik).WithMany(p => p.ClassPrviStraniJeziks)
                .HasForeignKey(d => d.PrviStraniJezikId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Class_Coodebookitem2");

            entity.HasOne(d => d.VrstaOdeljenja).WithMany(p => p.ClassVrstaOdeljenjas)
                .HasForeignKey(d => d.VrstaOdeljenjaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Class_Coodebookitem");
        });

        modelBuilder.Entity<Codebook>(entity =>
        {
            entity.ToTable("Codebook");

            entity.Property(e => e.DatumIzmene).HasColumnType("datetime");
            entity.Property(e => e.DatumUnosa)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Naziv)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Codebookitem>(entity =>
        {
            entity.ToTable("Coodebookitem");

            entity.Property(e => e.CoodebookId).HasColumnName("CoodebookID");
            entity.Property(e => e.DatumIzmene).HasColumnType("datetime");
            entity.Property(e => e.DatumUnosa)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Naziv)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Coodebook).WithMany(p => p.Coodebookitems)
                .HasForeignKey(d => d.CoodebookId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Coodebookitem_Codebook");
        });

        modelBuilder.Entity<Grade>(entity =>
        {
            entity.ToTable("Grade");

            entity.Property(e => e.DatumIzmene).HasColumnType("datetime");
            entity.Property(e => e.DatumUnosa).HasColumnType("datetime");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.RazredId).HasColumnName("RazredID");
            entity.Property(e => e.SkolskaGodinaId).HasColumnName("SkolskaGodinaID");

            entity.HasOne(d => d.Program).WithMany(p => p.GradePrograms)
                .HasForeignKey(d => d.ProgramId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Grade_Coodebookitem2");

            entity.HasOne(d => d.Razred).WithMany(p => p.GradeRazreds)
                .HasForeignKey(d => d.RazredId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Grade_Coodebookitem1");

            entity.HasOne(d => d.SkolskaGodina).WithMany(p => p.GradeSkolskaGodinas)
                .HasForeignKey(d => d.SkolskaGodinaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Grade_Coodebookitem");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.ToTable("User");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("email");
            entity.Property(e => e.Lozinka)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("lozinka");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}